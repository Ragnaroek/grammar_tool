<Program> -> <ClassDeclarationList>
<ClassDeclarationList> -> ɛ
<ClassDeclarationList> -> <ClassDeclaration> <ClassDeclarationList>
<ClassDeclaration> -> class IDENT { <ClassMemberList> }
<ClassMemberList> -> ɛ
<ClassMemberList> -> <ClassMember> <ClassMemberList>
<ClassMember> -> public <Type> IDENT <FieldOrMethod>
<ClassMember> -> public <MainMethod>
<FieldOrMethod> -> <Field>
<FieldOrMethod> -> <Method>
<MainMethod> -> static void main ( String [ ] IDENT ) <Block>
<Field> -> ;
<Method> -> ( ) <Block>
<Method> -> ( <Parameters> ) <Block>
<Parameters> -> <Parameter> <ParameterList>
<ParameterList> -> ɛ
<ParameterList> -> , <Parameters>
<Parameter> -> <Type> IDENT
<Type> -> int
<Type> -> boolean
<Type> -> void
<Type> -> IDENT
<Statement> -> <Block>
<Statement> -> <EmptyStatement>
<Statement> -> <IfStatement>
<Statement> -> <PrintStatement>
<Statement> -> <ExpressionStatement>
<Statement> -> <WhileStatement>
<Statement> -> <ReturnStatement>
<BlockStatementList> -> ɛ
<BlockStatementList> -> <BlockStatement> <BlockStatementList>
<Block> -> { <BlockStatementList> }
<BlockStatement> -> <Statement>
<BlockStatement> -> <LocalVariableDeclarationStatement>
<LocalVariableDeclarationStatement> -> <Type> IDENT <DeclOrDef> ;
<DeclOrDef> -> ;
<DeclOrDef> -> = <Expression> ;
<EmptyStatement> -> ;
<WhileStatement> -> while ( <Expression> ) <Statement>
<IfStatement> -> if ( <Expression> ) <Statement> <IfElseStatement>
<IfElseStatement> -> ɛ
<IfElseStatement> -> else <Statement>
<PrintStatement> -> System . out . println ( <Expression> ) ;
<ExpressionStatement> -> <Expression> ;
<ReturnStatement> -> return ;
<ReturnStatement> -> return <Expression> ;
<UnaryExpression> -> <PrimaryExpression>
<UnaryExpression> -> ! <UnaryExpression>
<UnaryExpression> -> - <UnaryExpression>
<PrimaryExpression> -> null
<PrimaryExpression> -> false
<PrimaryExpression> -> true
<PrimaryExpression> -> INTEGER_LITERAL
<PrimaryExpression> -> <MethodInvocationExpression>
<PrimaryExpression> -> <FieldAccessExpression>
<PrimaryExpression> -> <LocalVariableReferenceExpression>
<PrimaryExpression> -> this
<PrimaryExpression> -> ( <Expression> )
<PrimaryExpression> -> <NewObjectExpression>
<MethodInvocationExpression> -> IDENT ( <Content> <MIE>
<MethodInvocationExpression> -> null . IDENT ( <Content> <MIE>
<MethodInvocationExpression> -> false . IDENT ( <Content> <MIE>
<MethodInvocationExpression> -> true . IDENT ( <Content> <MIE>
<MethodInvocationExpression> -> INTEGER_LITERAL . IDENT ( <Content> <MIE>
<MethodInvocationExpression> -> <FieldAccessExpression> . IDENT ( <Content> <MIE>
<MethodInvocationExpression> -> <LocalVariableReferenceExpression> . IDENT ( <Content> <MIE>
<MethodInvocationExpression> -> this . IDENT ( <Content> <MIE>
<MethodInvocationExpression> -> ( <Expression> ) . IDENT ( <Content> <MIE>
<MethodInvocationExpression> -> <NewObjectExpression> . IDENT ( <Content> <MIE>
<MIE> -> ɛ
<MIE> -> . IDENT ( <Content> <MIE>
<Content> -> )
<Content> -> <ExpressionList> )
<ExpressionList> -> <Expression> <Continuation>
<Continuation> -> ɛ
<Continuation> -> , <ExpressionList>
<FieldAccessExpression> -> IDENT <FAE>
<FieldAccessExpression> -> null . IDENT <FAE>
<FieldAccessExpression> -> false . IDENT <FAE>
<FieldAccessExpression> -> true . IDENT <FAE>
<FieldAccessExpression> -> INTEGER_LITERAL . IDENT <FAE>
<FieldAccessExpression> -> <LocalVariableReferenceExpression> . IDENT <FAE>
<FieldAccessExpression> -> this . IDENT <FAE>
<FieldAccessExpression> -> ( <Expression> ) . IDENT <FAE>
<FieldAccessExpression> -> <NewObjectExpression> . IDENT <FAE>
<FAE> -> ɛ
<FAE> -> . IDENT <FAE>
<LocalVariableReferenceExpression> -> IDENT
<NewObjectExpression> -> new IDENT ( )
<Expression> -> <AssignmentExpression>
<Expression> -> <BoolExpression>
<Expression> -> <ArithExpression>
<AssignmentExpression> -> IDENT = <ArithExpression>
<BoolExpression> -> IDENT || IDENT
<ArithExpression> -> IDENT + IDENT
<ArithExpression> -> <UnaryExpression>
